function [ status, message ] = function_name( obj, selected_data )
% Summary of this function goes here
%   Detailed explanation goes here
%   Create new data if process is IRREVERSIBLE

%% function check

% assume worst
status=false;
try
    data_idx=1;% initialise counter
    askforparam=true;% always ask for the first one
    while data_idx<=numel(selected_data)
        % get the current data index
        current_data=selected_data(data_idx); data_idx<=numel(selected_data)
        
        % ----- ask for parameters ---
        options.Resize='on';options.WindowStyle='modal';options.Interpreter='tex';
        set(0,'DefaultUicontrolBackgroundColor',[0.3,0.3,0.3]);
        set(0,'DefaultUicontrolForegroundColor','k');
        answer = inputdlg('swap dimensions using dim index [1,2,3,4,5]=[t,X,Y,Z,T]',...
            'Swap Dimensions',1,...
            {'[1,2,3,4,5]'},options);
        set(0,'DefaultUicontrolBackgroundColor','k');
        set(0,'DefaultUicontrolForegroundColor','w');
        if ~isempty(answer)
            % assign values
            parameters=answer;
            
            % for multiple data ask for apply to all option
            if numel(selected_data)>1
                % ask if want to apply to the rest of the data items
                button = questdlg('Apply this setting to: ','Multiple Selection','Apply to All','Just this one','Apply to All') ;
                switch button
                    case 'Apply to All'
                        askforparam=false;
                    case 'Just this one'
                        askforparam=true;
                    otherwise
                        % action cancellation
                        askforparam=false;
                end
            end
        else
            %action cancelled
            message=sprintf('Data swap cancelled\n');
            parameters=[];
        end
        
        % ---- Calculation ---
        if isempty(parameters)
             message=sprintf('action cancelled\n');
        else
            
        end
        
        % increment data index
        data_idx=data_idx+1;
    end
catch exception
    message=exception.message;
end